name: Deploy to Azure VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Images
        run: |
          docker build -t rahul38/task-backend:latest ./backend
          docker push rahul38/task-backend:latest
          docker build -t rahul38/task-frontend:latest ./frontend
          docker push rahul38/task-frontend:latest

      - name: Deploy to Azure VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Define project directory
            PROJECT_DIR="/home/rahul/task-app"

            # Remove old project (since VM is fresh)
            rm -rf $PROJECT_DIR

            # Clone the latest repo
            git clone https://github.com/Rahul-Suthar/Auth.git $PROJECT_DIR

            # Move into project directory
            cd $PROJECT_DIR

            # Ensure Docker network exists
            docker network ls | grep app-network || docker network create app-network

            # Create .env files
            cat <<EOF | tee $PROJECT_DIR/backend/.env
            MONGO_URI=${{ secrets.MONGO_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            PORT=3000
            EOF

            cat <<EOF | tee $PROJECT_DIR/frontend/.env
            VITE_API_URL=http://${{ secrets.SERVER_IP }}/api
            EOF

            # Pull latest Docker images
            docker pull rahul38/task-backend:latest
            docker pull rahul38/task-frontend:latest

            # Start services using docker-compose
            docker-compose -f $PROJECT_DIR/backend/docker-compose.yml up -d
            docker-compose -f $PROJECT_DIR/frontend/docker-compose.yml up -d

            # Clean up old images
            docker image prune -af
